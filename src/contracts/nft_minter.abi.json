{
    "buildInfo": {
        "rustc": {
            "version": "1.79.0",
            "commitHash": "129f3b9964af4d4a709d1383930ade12dfe7c081",
            "commitDate": "2024-06-10",
            "channel": "Stable",
            "short": "rustc 1.79.0 (129f3b996 2024-06-10)"
        },
        "contractCrate": {
            "name": "nft_minter",
            "version": "0.1.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.53.0"
        }
    },
    "name": "NftMinter",
    "constructor": {
        "inputs": [
            {
                "name": "creator",
                "type": "Address"
            },
            {
                "name": "collection_name",
                "type": "bytes"
            },
            {
                "name": "single_nft_name",
                "type": "bytes"
            },
            {
                "name": "ticker",
                "type": "bytes"
            },
            {
                "name": "description",
                "type": "bytes"
            },
            {
                "name": "royalties",
                "type": "u64"
            },
            {
                "name": "max_supply",
                "type": "u64"
            },
            {
                "name": "ipfs_cid",
                "type": "bytes"
            },
            {
                "name": "file_ending",
                "type": "bytes"
            },
            {
                "name": "has_json_metadata",
                "type": "bool"
            },
            {
                "name": "tags",
                "type": "bytes"
            }
        ],
        "outputs": []
    },
    "upgradeConstructor": {
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "getCollectionIdentifier",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getTotalMinted",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getCollectionInfo",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Collection"
                }
            ]
        },
        {
            "name": "getCreator",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getCollectionName",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getSingleNftName",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getTicker",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getDescription",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getRoyalties",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getMaxSupply",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getIpfsCid",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getFileEnding",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getHasJsonMetadata",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getTags",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getIpfsIndices",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<u32>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "pause",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "resume",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "clearCollectionMapper",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "getMaxAmountPerTransaction",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getIsPaused",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "issueCollection",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Start a new phase.",
                "Comments:",
                "- `user_max_mints` - Maximum number of mints per user in the phase. If no limit, pass 0.",
                "- `max_mints` - Maximum number of mints in the phase. If no limit, pass 0.",
                "#### Important:",
                "Starting a phase will also enable minting."
            ],
            "name": "startPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "phase_name",
                    "type": "bytes"
                },
                {
                    "name": "user_max_mints",
                    "type": "u64"
                },
                {
                    "name": "max_mints",
                    "type": "u64"
                },
                {
                    "name": "costs",
                    "type": "List<Cost>"
                },
                {
                    "name": "whitelisted_users",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "claimRoyalties",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "tokens",
                    "type": "variadic<EgldOrEsdtTokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "enableMinting",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "disableMinting",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setCollectionName",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setSingleNftName",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setTicker",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "ticker",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setDescription",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "description",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setRoyalties",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "royalties",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMaxSupply",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "max_supply",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setIpfsCid",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "ipfs_cid",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setFileEnding",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "file_ending",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setHasJsonMetadata",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "has_json_metadata",
                    "type": "bool"
                }
            ],
            "outputs": []
        },
        {
            "name": "setTags",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "tags",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setPhaseName",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setUserMaxMintsInPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "max_mints",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMaxMintsInPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "max_mints",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setCostInPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeCostFromPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "addWhitelistedUsersInPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "users",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeWhitelistedUsersFromPhase",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "users",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "getManagedInput",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "costs",
                    "type": "variadic<multi<EgldOrEsdtTokenIdentifier,BigUint>>",
                    "multi_arg": true
                }
            ],
            "outputs": [
                {
                    "type": "List<Cost>"
                }
            ]
        },
        {
            "name": "getIsMintingEnabled",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "mint",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "amount",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<u64>",
                    "multi_result": true
                }
            ]
        },
        {
            "docs": [
                "#### Returns all the information about the Minter:",
                "",
                "- Creator Address",
                "- Collection Identifier",
                "- List of Strings:",
                "    - Collection name",
                "    - Single NFT name",
                "    - Ticker",
                "    - Description",
                "    - IPFS CID",
                "    - File ending (png, jpg, etc.)",
                "    - Tags",
                "    - Phase name",
                "- List of Numbers:",
                "    - Royalties",
                "    - Total minted (overall)",
                "    - Max supply",
                "    - Max amount per tranascation (generic prerequisite)",
                "    - Phase ID",
                "    - User max mints",
                "    - User minted",
                "    - Max mints",
                "    - Minted",
                "    - Fee",
                "- List of Booleans:",
                "    - Has JSON metadata",
                "    - Is minting enabled (by Creator)",
                "    - Is paused (by Protocol)",
                "    - Is Phase WL-only",
                "    - Can user try to mint (if not WL-only, it will be always true; otherwise, it will be true if the user is whitelisted)",
                "- List payment options: (multiple instances sequentially)",
                "    - Token",
                "    - Amount"
            ],
            "name": "getMinterInfo",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "opt_address",
                    "type": "optional<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": [
                {
                    "type": "Address"
                },
                {
                    "type": "TokenIdentifier"
                },
                {
                    "type": "variadic<bytes>",
                    "multi_result": true
                },
                {
                    "type": "variadic<u64>",
                    "multi_result": true
                },
                {
                    "type": "variadic<bool>",
                    "multi_result": true
                },
                {
                    "type": "variadic<multi<EgldOrEsdtTokenIdentifier,BigUint>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getCurrentPhaseInfo",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "Phase"
                }
            ]
        },
        {
            "name": "getCurrentPhaseId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getPhaseName",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getWhitelistedUsersInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getUserMaxMintsInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getUserMintedInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                },
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getMaxMintsInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getMintedInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getCostTokensInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<EgldOrEsdtTokenIdentifier>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getCostAmountInPhase",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "phase_id",
                    "type": "u64"
                },
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        }
    ],
    "events": [
        {
            "identifier": "select_ipfs_index",
            "inputs": [
                {
                    "name": "available_indices",
                    "type": "u32",
                    "indexed": true
                },
                {
                    "name": "selected_index",
                    "type": "u32",
                    "indexed": true
                },
                {
                    "name": "ipfs_index",
                    "type": "u32",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "mint",
            "inputs": [
                {
                    "name": "caller",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "payment",
                    "type": "EgldOrEsdtTokenPayment",
                    "indexed": true
                },
                {
                    "name": "collection_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "minted_nonces",
                    "type": "variadic<u64>",
                    "indexed": true
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": true,
    "types": {
        "Collection": {
            "type": "struct",
            "fields": [
                {
                    "name": "creator",
                    "type": "Address"
                },
                {
                    "name": "collection_name",
                    "type": "bytes"
                },
                {
                    "name": "single_nft_name",
                    "type": "bytes"
                },
                {
                    "name": "ticker",
                    "type": "bytes"
                },
                {
                    "name": "description",
                    "type": "bytes"
                },
                {
                    "name": "royalties",
                    "type": "u64"
                },
                {
                    "name": "total_minted",
                    "type": "u64"
                },
                {
                    "name": "max_supply",
                    "type": "u64"
                },
                {
                    "name": "ipfs_cid",
                    "type": "bytes"
                },
                {
                    "name": "file_ending",
                    "type": "bytes"
                },
                {
                    "name": "has_json_metadata",
                    "type": "bool"
                },
                {
                    "name": "tags",
                    "type": "bytes"
                }
            ]
        },
        "Cost": {
            "type": "struct",
            "fields": [
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "EgldOrEsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "EgldOrEsdtTokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "Phase": {
            "type": "struct",
            "fields": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "name",
                    "type": "bytes"
                },
                {
                    "name": "user_max_mints",
                    "type": "u64"
                },
                {
                    "name": "user_minted",
                    "type": "u64"
                },
                {
                    "name": "max_mints",
                    "type": "u64"
                },
                {
                    "name": "minted",
                    "type": "u64"
                },
                {
                    "name": "costs",
                    "type": "List<Cost>"
                },
                {
                    "name": "is_private",
                    "type": "bool"
                },
                {
                    "name": "can_user_mint",
                    "type": "bool"
                }
            ]
        }
    }
}
